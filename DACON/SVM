import numpy as np
import pandas as pd

train = pd.read_csv('data/final_train.csv')
test = pd.read_csv('data/final_test.csv')

# 학습 및 예측 데이터 분리
x_train = train.drop('가격(백만원)', axis = 1).values
y_train = train['가격(백만원)'].values
y_train = y_train.round().astype(int)

x_test = test

# 학습 데이터 분할
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(x_train, y_train, train_size = 0.7,
                                                   random_state = 1, stratify = None)
# 표준화(학습 데이터 기준)
from sklearn.preprocessing import StandardScaler

sc = StandardScaler()
sc.fit(x_train)
X_train_std = sc.transform(X_train)
X_test_std = sc.transform(X_test)

# SVR 교차검증
from sklearn.svm import SVR
from sklearn.model_selection import GridSearchCV

grid = {'C' : [0.1, 1, 10, 100], 'degree' : np.arange(1, 11)}
svr_gs = GridSearchCV(estimator = SVR(kernel = 'poly', epsilon = 0.1, gamma = 'scale'),
                     param_grid = grid, scoring = 'r2', cv = 5)
svr_gs.fit(X_train_std, Y_train)

print(svr_gs.best_score_)
print(svr_gs.best_params_) # 하이퍼파라미터 C(100), degree(10) 값을 SVR 모델에 적용

# 모델 훈련
svr = SVR(kernel = 'poly', degree = 10, C = 100, epsilon = 0.1, gamma = 'scale')
svr.fit(X_train_std, Y_train)

# 정오분류표(오차행렬)
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

Y_pred = svr.predict(X_test_std)
mse = mean_squared_error(Y_test, Y_pred)
mae = mean_absolute_error(Y_test, Y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(Y_test, Y_pred)

print(f'MAE : {mae}, MSE : {mse}, RMSE : {rmse}, R^2 : {r2}')
# MAE : 0.8978407415276466, MSE : 4.2578213584234845, RMSE : 2.0634488989125668, R^2 : 0.9970212794379649

## NuSVR 교차검증
from sklearn.svm import NuSVR
from sklearn.model_selection import GridSearchCV

grid = {'C' : [0.1, 1, 10, 100], 'degree' : np.arange(1, 11), 'nu' : [0.1, 0.2, 0.3, 0.4, 0.5]}
nusvr_gs = GridSearchCV(estimator = NuSVR(kernel = 'poly', gamma = 'scale'),
                     param_grid = grid, scoring = 'r2', cv = 5)
nusvr_gs.fit(X_train_std, Y_train)

print(nusvr_gs.best_score_)
print(nusvr_gs.best_params_) # 하이퍼파라미터 C(100), degree(10), nu(0.5) 값을 NuSVR 모델에 적용

## 모델 훈련
nusvr = NuSVR(nu = 0.5, kernel = 'poly', degree = 10, C = 100, gamma = 'scale')
nusvr.fit(X_train_std, Y_train)

## 정오분류표(오차행렬)
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

Y_pred = nusvr.predict(X_test_std)
mse = mean_squared_error(Y_test, Y_pred)
mae = mean_absolute_error(Y_test, Y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(Y_test, Y_pred)

print(f'MAE : {mae}, MSE : {mse}, RMSE : {rmse}, R^2 : {r2}')
## MAE : 0.9874016954902318, MSE : 3.994286535254345, RMSE : 1.9985711233914958, R^2 : 0.9972056452275331
