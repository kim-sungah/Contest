import numpy as np
import pandas as pd

train = pd.read_csv('data/final_train.csv')
test = pd.read_csv('data/final_test.csv')

# 학습 및 예측 데이터 분리
x_train = train.drop('가격(백만원)', axis = 1).values
y_train = train['가격(백만원)'].values
y_train = y_train.round().astype(int)

x_test = test

# 학습 데이터 분할
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(x_train, y_train, train_size = 0.7,
                                                   random_state = 1, stratify = None)
# 교차검증
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import GridSearchCV

rfr = RandomForestRegressor(0, n_jobs = -1)
params = {'n_estimators' : [10, 50, 100],
          'max_depth' : [6, 8, 10, 12, 14, 16],
          'min_samples_leaf' : [8, 12, 16, 18],
          'min_samples_split' : [8, 16, 20]}

rfr_gs = GridSearchCV(rfr, param_grid = params, cv = 5, n_jobs = -1)
rfr_gs.fit(X_train, Y_train)

print(rfr_gs.best_score_)
print(rfr_gs.best_params_) # {'max_depth': 16, 'min_samples_leaf': 8, 'min_samples_split': 20, 'n_estimators': 100}

# 모델 훈련
frf_model = RandomForestRegressor(random_state = 0,
                                  max_depth = 16,
                                  min_samples_leaf = 8,
                                  min_samples_split = 20,
                                  n_estimators = 50)
frf_model.fit(X_train, Y_train)

# 정오분류표(오차행렬)
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

Y_pred = frf_model.predict(X_test)
mse = mean_squared_error(Y_test, Y_pred)
mae = mean_absolute_error(Y_test, Y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(Y_test, Y_pred)

print(f'MSE : {mse}, MAE : {mae}, RMSE : {rmse}, R^2 : {r2}')
# MSE : 2.072748123054553, MAE : 0.7829604143368016, RMSE : 1.4397041790085048, R^2 : 0.9985499303671237
